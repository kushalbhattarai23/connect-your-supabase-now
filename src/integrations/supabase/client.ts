
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://gzampnmelaeqhwzzsvam.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd6YW1wbm1lbGFlcWh3enpzdmFtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc3NTMyNjcsImV4cCI6MjA2MzMyOTI2N30.x5KnK9mtIDf-ZNiGKSGlRqwjP57WMZ0Jx_ZdWWk3--8";

// Storage detection with error handling
const getStorage = () => {
  if (typeof window === 'undefined') {
    return undefined;
  }
  
  try {
    // Test localStorage availability
    const testKey = 'supabase-storage-test';
    window.localStorage.setItem(testKey, 'test');
    window.localStorage.removeItem(testKey);
    console.log('localStorage is available for session persistence');
    return window.localStorage;
  } catch (error) {
    console.warn('localStorage not available, sessions will not persist:', error);
    return undefined;
  }
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: getStorage(),
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  }
});

// Log the configuration for debugging
console.log('Supabase client initialized with localStorage:', !!getStorage());
